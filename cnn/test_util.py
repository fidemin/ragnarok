import numpy as np
import pytest

from cnn.util import img2col


@pytest.mark.parametrize(
    "test_input,filter_h,filter_w,stride,padding,expected_shape,expected_col",
    [
        # test case 1: no padding, stride = 2
        (
                np.array([
                    [
                        [
                            [3.0, 4.0, 5.0, 1.0, 2.0],
                            [1.0, 3.0, 1.0, 2.0, 1.0],
                            [0.0, 4.0, 2.0, -1.0, 2.0],
                            [1.0, 3.0, 4.0, 1.0, 2.0],
                            [2.0, 5.0, 1.0, 2.0, 6.0]
                        ],
                        [
                            [1.0, 3.0, 5.0, 1.0, 2.0],
                            [2.0, 3.0, 1.0, 2.0, 1.0],
                            [0.0, 4.0, 2.0, -5.0, 2.0],
                            [1.0, 3.0, 4.0, 1.0, 2.0],
                            [2.0, 5.0, 1.0, 3.0, 6.0]
                        ]
                    ]
                ]), 3, 3, 2, 0,
                (1, 72),
                np.array([
                    [
                        3.0, 4.0, 5.0, 1.0, 3.0, 1.0, 0.0, 4.0, 2.0,
                        5.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, -1.0, 2.0,
                        0.0, 4.0, 2.0, 1.0, 3.0, 4.0, 2.0, 5.0, 1.0,
                        2.0, -1.0, 2.0, 4.0, 1.0, 2.0, 1.0, 2.0, 6.0,

                        1.0, 3.0, 5.0, 2.0, 3.0, 1.0, 0.0, 4.0, 2.0,
                        5.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, -5.0, 2.0,
                        0.0, 4.0, 2.0, 1.0, 3.0, 4.0, 2.0, 5.0, 1.0,
                        2.0, -5.0, 2.0, 4.0, 1.0, 2.0, 1.0, 3.0, 6.0
                    ]
                ])
        ),
        # test case 2: no padding and N = 2
        (
                np.array([
                    [
                        [
                            [1.0, 2.0, 1.0], [-1.0, 3.0, 2.2]
                        ],
                        [
                            [5.0, 4.0, 1.1], [-2.0, 1.0, 2.0]
                        ]
                    ],
                    [
                        [
                            [3.0, 2.0, 3.2], [-1.0, 1.1, 5.0]
                        ],
                        [
                            [3.3, 2.3, -2.2], [3.4, 2.1, -1.1]
                        ]
                    ]
                ]),
                1, 2, 1, 0,
                (2, 16),
                np.array([
                    [
                        1.0, 2.0, 2.0, 1.0, -1.0, 3.0, 3.0, 2.2,
                        5.0, 4.0, 4.0, 1.1, -2.0, 1.0, 1.0, 2.0
                    ],
                    [
                        3.0, 2.0, 2.0, 3.2, -1.0, 1.1, 1.1, 5.0,
                        3.3, 2.3, 2.3, -2.2, 3.4, 2.1, 2.1, -1.1
                    ]
                ])
        ),
        # test case 3: padding = 1
        (
                np.array([
                    [
                        [
                            [1.0, 2.0], [2.1, 3.0]
                        ],
                        [
                            [2.2, 2.1], [2.4, 5.0]
                        ]

                    ],
                    [
                        [
                            [2.1, -1.0], [-5.0, -2.2]
                        ],
                        [
                            [1.1, 2.1], [-1.5, 3.0]
                        ]
                    ]
                ]),
                3, 3, 1, 1,
                (2, 72),
                np.array(
                    [
                        [
                            0.0, 0.0, 0.0, 0.0, 1.0, 2.0, 0.0, 2.1, 3.0,
                            0.0, 0.0, 0.0, 1.0, 2.0, 0.0, 2.1, 3.0, 0.0,
                            0.0, 1.0, 2.0, 0.0, 2.1, 3.0, 0.0, 0.0, 0.0,
                            1.0, 2.0, 0.0, 2.1, 3.0, 0.0, 0.0, 0.0, 0.0,

                            0.0, 0.0, 0.0, 0.0, 2.2, 2.1, 0.0, 2.4, 5.0,
                            0.0, 0.0, 0.0, 2.2, 2.1, 0.0, 2.4, 5.0, 0.0,
                            0.0, 2.2, 2.1, 0.0, 2.4, 5.0, 0.0, 0.0, 0.0,
                            2.2, 2.1, 0.0, 2.4, 5.0, 0.0, 0.0, 0.0, 0.0
                        ],
                        [
                            0.0, 0.0, 0.0, 0.0, 2.1, -1.0, 0.0, -5.0, -2.2,
                            0.0, 0.0, 0.0, 2.1, -1.0, 0.0, -5.0, -2.2, 0.0,
                            0.0, 2.1, -1.0, 0.0, -5.0, -2.2, 0.0, 0.0, 0.0,
                            2.1, -1.0, 0.0, -5.0, -2.2, 0.0, 0.0, 0.0, 0.0,

                            0.0, 0.0, 0.0, 0.0, 1.1, 2.1, 0.0, -1.5, 3.0,
                            0.0, 0.0, 0.0, 1.1, 2.1, 0.0, -1.5, 3.0, 0.0,
                            0.0, 1.1, 2.1, 0.0, -1.5, 3.0, 0.0, 0.0, 0.0,
                            1.1, 2.1, 0.0, -1.5, 3.0, 0.0, 0.0, 0.0, 0.0
                        ]
                    ]
                )
        )
    ],
)
def test_img2col(test_input, filter_h, filter_w, stride, padding, expected_shape, expected_col):
    col = img2col(test_input, filter_h, filter_w, stride=stride, padding=padding)

    assert col.shape == expected_shape
    assert np.allclose(col, expected_col)
